apply plugin: 'com.android.application'
//apply plugin: 'AndResGuard'
//apply plugin: 'io.michaelrocks.paranoid'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'


buildscript {
    repositories {
        jcenter()
        google()
    }
    dependencies {
        //classpath 'com.tencent.mm:AndResGuard-gradle-plugin:1.2.18'
        //classpath 'io.michaelrocks:paranoid-gradle-plugin:0.2.5'
    }
}
/*
def applicationProperties = new Properties()
applicationProperties.load(new FileInputStream(rootProject.file("application.properties")))
def SHA1 = System.getenv("CIRCLE_SHA1")
def applicationVersionCode = applicationProperties["versionCode"].toInteger()
def applicationVersionName = applicationProperties["versionName"]
def isPerVersion = applicationProperties["isPerRelease"] == "true"
if (SHA1 != null) {
    applicationVersionName = applicationVersionName + ".${SHA1.substring(0, 7)}"
}
if (isPerVersion) {
    applicationVersionName = applicationVersionName + ".${applicationProperties["preReleaseName"]}-${applicationProperties["preReleaseVer"]}"
}

andResGuard {
    mappingFile = null
    use7zip = true
    useSign = true
    keepRoot = false
    mergeDuplicatedRes = true
    whiteList = ["R.mipmap.ic_launcher",
                 "R.mipmap.ic_launcher_foreground",
                 "R.mipmap.ic_launcher_round",
                 "R.drawable.ic_*",
                 "R.color.theme_color_*",
                 "R.id.*"]
    compressFilePattern = ["*.png",
                           "*.jpg",
                           "*.jpeg",
                           "*.gif",
                           "*.webp",
                           "*.kotlin_metadata",
                           "resources.arsc"]
    sevenzip {
        artifact = 'com.tencent.mm:SevenZip:1.2.10'
    }
    finalApkBackupPath = "${project.rootDir}/app/release/${applicationVersionName}(${applicationVersionCode}).apk"
    digestalg = "SHA-256"
}*/

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.owo.recall.music"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 3
        versionName "Alpha 0.3"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            //// apk包名称后缀，用来区分release和debug
            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            //signingConfig signingConfigs.debug
        }

        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            //加载默认混淆配置文件
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //混淆
            minifyEnabled true
            // 移除无用的resource文件
            shrinkResources true
            //Zipalign优化
            zipAlignEnabled true
            //签名
            //signingConfig signingConfigs.release
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation "com.github.bumptech.glide:glide:4.11.0"
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation("com.squareup.okhttp3:okhttp:4.9.0")

}